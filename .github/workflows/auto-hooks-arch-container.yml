name: BigLinux Hooks Arch Container

# Controls when the workflow will run
on:
  schedule:
    - cron:  '30 2 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
      volumes:
        - /imagegeneration:/lixo/imagegeneration
        - /opt:/lixo/opt
        - /usr:/lixo/usr

    steps:
      - uses: actions/checkout@v3
      
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      
      - name: Clean System
        shell: bash -O extglob {0}
        run: |
          echo "Clean System"
          df -h
          rm -rf /__t
          rm -rf \
          /lixo/imagegeneration \
          /lixo/opt/az \
          /lixo/opt/ghc \
          /lixo/opt/pipx \
          /lixo/opt/google \
          /lixo/opt/microsoft \
          /lixo/opt/hostedtoolcache \
          /lixo/usr/lib/gcc \
          /lixo/usr/lib/llvm* \
          /lixo/var/lib/mysql \
          /lixo/var/lib/snapd \
          /lixo/var/lib/docker \
          /lixo/usr/lib/google* \
          /lixo/usr/lib/firefox \
          /lixo/usr/local/julia* \
          /lixo/usr/local/.ghcup \
          /lixo/usr/local/aws-cli \
          /lixo/usr/local/lib/android \
          /lixo/usr/local/aws-sam-cli \
          /lixo/usr/local/share/chromium \
          /lixo/usr/local/lib/node_modules \
          /lixo/usr/local/share/powershell \
          /lixo/usr/share/swift \
          /lixo/usr/share/dotnet
          echo "End Clean System"
          df -h
        
      - name: Install Dependencies
        shell: bash
        run: |
          echo -e "[multilib]\nInclude = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
          pacman -Syu --noconfirm --needed pacman sudo git github-cli openssh gnupg coreutils rsync wget fakeroot binutils cmake extra-cmake-modules gcc make devtools \
          acl \
          archlinux-keyring \
          autoconf \
          automake \
          binutils \
          bison \
          btrfs-progs \
          cryptsetup \
          db \
          debugedit \
          diffutils \
          dnssec-anchors \
          fakeroot \
          flex \
          gc \
          gcc-libs \
          git \
          glib2 \
          groff \
          grub \
          guile \
          iputils \
          jansson \
          ldns \
          libedit \
          libisl \
          libmpc \
          libnghttp2 \
          libnl \
          libp11-kit \
          libpcap \
          libpsl \
          libsasl \
          libseccomp \
          libsecret \
          libssh2 \
          libsysprof-capture \
          libtasn1 \
          libtirpc \
          libtool \
          libunistring \
          libverto \
          libxcrypt \
          libxml2 \
          licenses \
          linux \
          linux-api-headers \
          linux-firmware \
          linux-firmware-whence \
          lz4 \
          lzo \
          m4 \
          make \
          mkinitcpio \
          mkinitcpio-busybox \
          mpfr \
          nano \
          ncurses \
          nettle \
          npth \
          openssh \
          openssl \
          p11-kit \
          pacman-mirrorlist \
          pam \
          pambase \
          patch \
          pciutils \
          pcre2 \
          perl \
          perl-error \
          perl-mailtools \
          perl-timedate \
          pinentry \
          pkgconf \
          popt \
          procps-ng \
          psmisc \
          readline \
          sed \
          shadow \
          sqlite \
          sudo \
          systemd \
          systemd-libs \
          systemd-sysvcompat \
          tar \
          texinfo \
          tpm2-tss \
          tzdata \
          util-linux \
          util-linux-libs \
          which \
          xz \
          zlib \
          zram-generator \
          zstd
          
      - name: Add BigLinux Repo and Key
        shell: bash
        run: |
          #add biglinux testing repository
          echo '
          [biglinux-testing]
          SigLevel = PackageRequired
          Server = https://'${{ secrets.REPO_MIRROR }}'.biglinux.com.br/testing/$arch' | tee -a /etc/pacman.conf
          
          echo '
          [biglinux-stable]
          SigLevel = PackageRequired
          Server = https://'${{ secrets.REPO_MIRROR }}'.biglinux.com.br/stable/$arch' | tee -a /etc/pacman.conf
          
          sed -i '/PACKAGER=/s/#PACKAGER=.*/\PACKAGER="BigLinux Package Build <bigbruno@gmail.com>\"/' /etc/makepkg.conf
          
          #add biglinux Keyring
          git clone --depth 1 https://github.com/biglinux/biglinux-keyring.git
          pushd biglinux-keyring
            install -m0644 biglinux.gpg /usr/share/pacman/keyrings/
            install -m0644 biglinux-trusted /usr/share/pacman/keyrings/
            install -m0644 biglinux-trusted /usr/share/pacman/keyrings/
          popd
          rm -rf biglinux-keyring
          
          pacman-key --init
          pacman-key --populate archlinux biglinux
        
          pacman -Sy
          
      - name: Teste, Makepkg and WebHooks
        shell: bash
        env:
          CHAVE: ${{ secrets.WEBHOOK_TOKEN }}
          REPO: stable
        run: |
          useradd builduser -m
          passwd -d builduser
          printf 'builduser ALL=(ALL) ALL\n' | tee -a /etc/sudoers
          
          # gitfolder=$(find -type f -name PKGBUILD | sed 's/PKGBUILD//')
          # chmod 777 $gitfolder
          # cd $gitfolder
          # sudo -u builduser bash -c 'makepkg -sc --noconfirm --skippgpcheck'
          
          # bash lista-aur-stable-arch-container.sh
          sudo pacman -Syy
          # bash lista-aur-stable-arch-container stable
          # bash lista-aur-stable-arch-container testing
          for r in *.sh; do if [ "$r" != "BigLinuxAur.sh" ]; then echo '---'; echo $r; bash $r; echo '---'; fi; done
